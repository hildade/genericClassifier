% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/createClassifier.R
\name{createClassifier}
\alias{createClassifier}
\title{Manage training and creation of individual classifiers}
\usage{
createClassifier(data, comp_type, typeK = "range", range_pars,
  remove_overlaps = TRUE, type = "PAX", overlap_class_1 = "",
  overlap_class_2 = "", ...)
}
\arguments{
\item{data}{data frame of discretized RMA values for training set with samples as
columns and probesets as rows}

\item{comp_type}{character vector of 2 elements that specifies the groups of samples
to keep in the data frame (default: 4).}

\item{typeK}{character that specifies whether to test a range of feature set parameters
("range") or lock the classifier based on a specified feature set size ("set").}

\item{range_pars}{vector specifying feature set size parameters specific to type of
training specified by 'typeK'.}

\item{remove_overlaps}{logical specifying whether to remove overlapping probesets
if the 'txClassifier' list has more than one classifier (default = TRUE).}

\item{overlap_class_1}{character specifying the name of the first classifier to be
used when looking for overlapping probesets when remove_overlaps is TRUE.}

\item{overlap_class_2}{character specifying the name of the second classifier to be
used when looking for overlapping probesets when remove_overlaps is TRUE.
#'}

\item{...}{additional arguments include: "svm_cost", "svm_gamma",
"classifier_name_base", "classifier_name".}
}
\value{
list
}
\description{
\code{createClassifier} returns a list of 3 elements: 1) list of classifier
probeset ids; 2) numeric vector of classifier accuracies: 3) list of classifier
probesets discretized training data.
}
\details{
This function is a wrapper for calling \code{\link{subsetComparison}} prior to a
'typeK' based decision. If 'typeK' equals "range", then
\code{\link{scanClassifierRange}} is called and produces classifier
accuracies for a specified range. Otherwise \code{\link{testForExistingClassifier}}
and \code{\link{selectFeaturesMRMR}} are called to create the classifier based on a
specified feature set size.
}
\examples{
\dontrun{
func_output_1 <- passDataToCreateClassifier(data, c("C","A"), "range", c(250, 90, 110))
func_output_2 <- passDataToCreateClassifier(data, c("C","A"), "set", c("full", 100))
}
}

